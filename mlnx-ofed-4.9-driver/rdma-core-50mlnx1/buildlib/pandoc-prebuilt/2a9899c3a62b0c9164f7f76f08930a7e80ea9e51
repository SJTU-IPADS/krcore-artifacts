.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "mlx5dv_devx_get_event" "3" "" "" ""
.hy
.SH NAME
.PP
mlx5dv_devx_get_event \- Get an asynchronous event.
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <infiniband/mlx5dv.h>

struct\ mlx5dv_devx_async_event_hdr\ {
\ \ \ \ uint64_t\ \ \ \ cookie;
\ \ \ \ uint8_t\ \ \ \ \ out_data[];
};

ssize_t\ mlx5dv_devx_get_event(struct\ mlx5dv_devx_event_channel\ *event_channel,
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ struct\ mlx5dv_devx_async_event_hdr\ *event_data,
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ size_t\ event_resp_len)
\f[]
.fi
.SH DESCRIPTION
.PP
Get a device event on the given \f[I]event_channel\f[].
Post a successful subscription over the event channel by calling to
mlx5dv_devx_subscribe_devx_event() the application should use this API
to get the response once an event has occurred.
.PP
Upon response the \f[I]cookie\f[] that was supplied upon the
subscription is returned and the \f[I]out_data\f[] includes the data
itself.
The \f[I]out_data\f[] may be omitted in case the channel was created
with the omit data flag.
.PP
The application must supply a large enough buffer to hold the event
according to the device specification, the buffer size is given by the
input \f[I]event_resp_len\f[] parameter.
.SH ARGUMENTS
.TP
.B \f[I]event_channel\f[]
.IP
.nf
\f[C]
The\ channel\ to\ get\ the\ event\ over.
\f[]
.fi
.RS
.RE
.TP
.B \f[I]event_data\f[]
The output data from the asynchronous event.
.RS
.RE
.TP
.B \f[I]event_resp_len\f[]
The output buffer size to hold the response.
.RS
.RE
.SH RETURN VALUE
.PP
Upon success \f[I]mlx5dv_devx_get_event\f[] will return the number of
bytes read, otherwise \-1 will be returned and errno was set.
.SH NOTES
.PP
In case the \f[I]event_channel\f[] was created with the omit data flag,
events having the same type may be combined per subscription and be
reported once with the matching \f[I]cookie\f[].
In that mode of work, ordering is not preserved between those events to
other on this channel.
.PP
On the other hand, when each event should hold the device data ordering
is preserved, however, events might be loose as of lack of kernel
memory, in that case EOVERFLOW will be reported.
.SH SEE ALSO
.PP
\f[I]mlx5dv_open_device(3)\f[],
\f[I]mlx5dv_devx_subscribe_devx_event(3)\f[]
.SH AUTHOR
.PP
Yishai Hadas <yishaih@mellanox.com>
